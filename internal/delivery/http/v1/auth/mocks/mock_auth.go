// Code generated by MockGen. DO NOT EDIT.
// Source: auth.go

// Package mock_auth is a generated GoMock package.
package mock_auth

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	security "github.com/zhuravlev-pe/course-watch/pkg/security"
)

// MockBearerTokenHandler is a mock of BearerTokenHandler interface.
type MockBearerTokenHandler struct {
	ctrl     *gomock.Controller
	recorder *MockBearerTokenHandlerMockRecorder
}

// MockBearerTokenHandlerMockRecorder is the mock recorder for MockBearerTokenHandler.
type MockBearerTokenHandlerMockRecorder struct {
	mock *MockBearerTokenHandler
}

// NewMockBearerTokenHandler creates a new mock instance.
func NewMockBearerTokenHandler(ctrl *gomock.Controller) *MockBearerTokenHandler {
	mock := &MockBearerTokenHandler{ctrl: ctrl}
	mock.recorder = &MockBearerTokenHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBearerTokenHandler) EXPECT() *MockBearerTokenHandlerMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockBearerTokenHandler) Generate(principal *security.UserPrincipal) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate", principal)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generate indicates an expected call of Generate.
func (mr *MockBearerTokenHandlerMockRecorder) Generate(principal interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockBearerTokenHandler)(nil).Generate), principal)
}

// GetTokenTtl mocks base method.
func (m *MockBearerTokenHandler) GetTokenTtl() time.Duration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokenTtl")
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

// GetTokenTtl indicates an expected call of GetTokenTtl.
func (mr *MockBearerTokenHandlerMockRecorder) GetTokenTtl() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokenTtl", reflect.TypeOf((*MockBearerTokenHandler)(nil).GetTokenTtl))
}

// Parse mocks base method.
func (m *MockBearerTokenHandler) Parse(tokenString string) (*security.JwtPayload, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Parse", tokenString)
	ret0, _ := ret[0].(*security.JwtPayload)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Parse indicates an expected call of Parse.
func (mr *MockBearerTokenHandlerMockRecorder) Parse(tokenString interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Parse", reflect.TypeOf((*MockBearerTokenHandler)(nil).Parse), tokenString)
}
